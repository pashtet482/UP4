import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import javax.swing.*;

public class RecruitmentAgencyTest {

    private RecruitmentAgency form;

    @BeforeEach
    public void setUp() {
    	RecruitmentAgency form = new RecruitmentAgency(); // Инициализируем форму
    }

    @Test
    public void testFindVacancies_ValidData() {
        // Устанавливаем данные в компоненты формы
        form.nameField.setText("Иван Иванов");
        form.positionBox.setSelectedIndex(1); // Программист
        form.fullTimeButton.setSelected(true); // Штат
        form.specialtyBox.setSelectedIndex(0); // Инженер

        // Проверяем, что найден правильный результат
        String name = form.nameField.getText().trim();
        String position = (String) form.positionBox.getSelectedItem();
        String employment = form.fullTimeButton.isSelected() ? "Штат" : "ГПХ";
        String specialty = (String) form.specialtyBox.getSelectedItem();

        String result = form.findVacancies(name, position, employment, "Высшее", specialty);

        String expected = "Уважаемый(ая) Иван Иванов, подходящие вакансии:\n- Программист: 100,000 руб.\n";
        assertEquals(expected, result);
    }

    @Test
    public void testFindVacancies_NoResults() {
        // Устанавливаем данные в компоненты формы
        form.nameField.setText("Иван Иванов");
        form.positionBox.setSelectedIndex(3); // Маркетолог
        form.fullTimeButton.setSelected(true); // Штат
        form.specialtyBox.setSelectedIndex(4); // Системный администратор

        // Проверяем, что нет подходящих вакансий
        String name = form.nameField.getText().trim();
        String position = (String) form.positionBox.getSelectedItem();
        String employment = form.fullTimeButton.isSelected() ? "Штат" : "ГПХ";
        String specialty = (String) form.specialtyBox.getSelectedItem();

        String result = form.findVacancies(name, position, employment, "Высшее", specialty);

        String expected = "Уважаемый(ая) Иван Иванов, подходящие вакансии:\nНет подходящих вакансий.";
        assertEquals(expected, result);
    }

    @Test
    public void testFindVacancies_EmptyName() {
        // Устанавливаем данные в компоненты формы
        form.nameField.setText("");
        form.positionBox.setSelectedIndex(0); // Менеджер
        form.fullTimeButton.setSelected(true); // Штат
        form.specialtyBox.setSelectedIndex(0); // Инженер

        // Проверяем, что показывается ошибка для пустого имени
        String name = form.nameField.getText().trim();
        String position = (String) form.positionBox.getSelectedItem();
        String employment = form.fullTimeButton.isSelected() ? "Штат" : "ГПХ";
        String specialty = (String) form.specialtyBox.getSelectedItem();

        String result = form.findVacancies(name, position, employment, "Высшее", specialty);

        assertEquals("Пожалуйста, заполните все поля!", result);
    }

    @Test
    public void testFindVacancies_InvalidPosition() {
        // Устанавливаем данные в компоненты формы
        form.nameField.setText("Иван Иванов");
        form.positionBox.setSelectedIndex(5); // Юрист
        form.fullTimeButton.setSelected(true); // Штат
        form.specialtyBox.setSelectedIndex(1); // Юрист

        // Проверяем, что вакансии для выбранной должности существуют
        String name = form.nameField.getText().trim();
        String position = (String) form.positionBox.getSelectedItem();
        String employment = form.fullTimeButton.isSelected() ? "Штат" : "ГПХ";
        String specialty = (String) form.specialtyBox.getSelectedItem();

        String result = form.findVacancies(name, position, employment, "Высшее", specialty);

        String expected = "Уважаемый(ая) Иван Иванов, подходящие вакансии:\n- Юрист: 90,000 руб.\n";
        assertEquals(expected, result);
    }
}
